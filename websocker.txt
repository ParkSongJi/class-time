HTTP 통신
- 요청(request, 클라이언트)과 응답(response, 서버)으로 이루어짐
- 클라이언트가 요청을 먼저 하고 서버는 수동적으로 응답해주는 구조
- 반이중통신

웹소켓(Web Socket)
- 전이중통신을 지원
- 실시간 네트워킹이 보장
- 브라우저에서 지원하는 소켓통신

웹소켓의 동작 원리
1. 최초 연결 요청 시 클라이언트에서 HTTP를 통해 웹 서버에 요청
    (핸드셰이크, Handshake: Websocket 프로토콜로 전환)
2. 연결이 수립되면 클라이언트와 서버 양측간의 데이터 통신 단계가 시작
    양방향 통신(전이중 통신), 상대방에게 ping 패킷을 보낼 수 있음, 
    수신한 측은 pong 패킷을 전송함(Heartbeat)
3. 클라이언트 혹은 서버 양측 누구나 연결을 종료할 수 있음

Socket.IO
- Node.js 기반의 웹소켓 라이브러리
- 실시간 양방향 통신을 가능하게 해주는 도구

    npm i socket.io

문제.
- 닉네임을 추가하여 메세지를 출력하기
- 이모지 추가하기
- 채널을 생성


socket.join(값): 해당 값에 속한 소켓 객체가 됨

닉네임 [     ] [설정하기] -> on socket?
채널 [      ] [입장하기] -> socket.join?
메세지 [        ] [보내기]  -> socket.emit?

채널
    게임
    스포츠
메세지  [       ] [보내기]